// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: hibernate/HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package com.vis.oubl.domain;

import java.io.Serializable;

/**
 * 
 */
// HibernateEntity.vsl annotations merge-point
public abstract class My010Customer
    implements Serializable, Comparable<My010Customer>
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = 7922432154785584272L;

    // Generate 11 attributes
    private String firstName;

    /**
     * 
     * @return this.firstName String
     */
    public String getFirstName()
    {
        return this.firstName;
    }

    /**
     * 
     * @param firstNameIn String
     */
    public void setFirstName(String firstNameIn)
    {
        this.firstName = firstNameIn;
    }

    private Long id;

    /**
     * 
     * @return this.id Long
     */
    public Long getId()
    {
        return this.id;
    }

    /**
     * 
     * @param idIn Long
     */
    public void setId(Long idIn)
    {
        this.id = idIn;
    }

    private String lastName;

    /**
     * 
     * @return this.lastName String
     */
    public String getLastName()
    {
        return this.lastName;
    }

    /**
     * 
     * @param lastNameIn String
     */
    public void setLastName(String lastNameIn)
    {
        this.lastName = lastNameIn;
    }

    private String middleName;

    /**
     * 
     * @return this.middleName String
     */
    public String getMiddleName()
    {
        return this.middleName;
    }

    /**
     * 
     * @param middleNameIn String
     */
    public void setMiddleName(String middleNameIn)
    {
        this.middleName = middleNameIn;
    }

    private Integer identityNumber;

    /**
     * 
     * @return this.identityNumber Integer
     */
    public Integer getIdentityNumber()
    {
        return this.identityNumber;
    }

    /**
     * 
     * @param identityNumberIn Integer
     */
    public void setIdentityNumber(Integer identityNumberIn)
    {
        this.identityNumber = identityNumberIn;
    }

    private Integer insuranceNumber;

    /**
     * 
     * @return this.insuranceNumber Integer
     */
    public Integer getInsuranceNumber()
    {
        return this.insuranceNumber;
    }

    /**
     * 
     * @param insuranceNumberIn Integer
     */
    public void setInsuranceNumber(Integer insuranceNumberIn)
    {
        this.insuranceNumber = insuranceNumberIn;
    }

    private String address;

    /**
     * 
     * @return this.address String
     */
    public String getAddress()
    {
        return this.address;
    }

    /**
     * 
     * @param addressIn String
     */
    public void setAddress(String addressIn)
    {
        this.address = addressIn;
    }

    private Long mobileNumber;

    /**
     * 
     * @return this.mobileNumber Long
     */
    public Long getMobileNumber()
    {
        return this.mobileNumber;
    }

    /**
     * 
     * @param mobileNumberIn Long
     */
    public void setMobileNumber(Long mobileNumberIn)
    {
        this.mobileNumber = mobileNumberIn;
    }

    private Integer telephoneNumber;

    /**
     * 
     * @return this.telephoneNumber Integer
     */
    public Integer getTelephoneNumber()
    {
        return this.telephoneNumber;
    }

    /**
     * 
     * @param telephoneNumberIn Integer
     */
    public void setTelephoneNumber(Integer telephoneNumberIn)
    {
        this.telephoneNumber = telephoneNumberIn;
    }

    private String nationality;

    /**
     * 
     * @return this.nationality String
     */
    public String getNationality()
    {
        return this.nationality;
    }

    /**
     * 
     * @param nationalityIn String
     */
    public void setNationality(String nationalityIn)
    {
        this.nationality = nationalityIn;
    }

    private String type = "INSURANCE";

    /**
     * 
     * @return this.type String
     */
    public String getType()
    {
        return this.type;
    }

    /**
     * 
     * @param typeIn String
     */
    public void setType(String typeIn)
    {
        this.type = typeIn;
    }

    // Generate 0 associations
    /**
     * Returns <code>true</code> if the argument is an My010Customer instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    @Override
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof My010Customer))
        {
            return false;
        }
        final My010Customer that = (My010Customer)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    @Override
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (this.id == null ? 0 : this.id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link My010Customer}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link My010Customer}.
         * @return new My010CustomerImpl()
         */
        public static My010Customer newInstance()
        {
            return new My010CustomerImpl();
        }

        /**
         * Constructs a new instance of {@link My010Customer}, taking all required and/or
         * read-only properties as arguments, except for identifiers.
         * @param firstName String
         * @param lastName String
         * @param middleName String
         * @param address String
         * @return newInstance
         */
        public static My010Customer newInstance(String firstName, String lastName, String middleName, String address)
        {
            final My010Customer entity = new My010CustomerImpl();
            entity.setFirstName(firstName);
            entity.setLastName(lastName);
            entity.setMiddleName(middleName);
            entity.setAddress(address);
            return entity;
        }

        /**
         * Constructs a new instance of {@link My010Customer}, taking all possible properties
         * (except the identifier(s))as arguments.
         * @param firstName String
         * @param lastName String
         * @param middleName String
         * @param identityNumber Integer
         * @param insuranceNumber Integer
         * @param address String
         * @param mobileNumber Long
         * @param telephoneNumber Integer
         * @param nationality String
         * @param type String
         * @return newInstance My010Customer
         */
        public static My010Customer newInstance(String firstName, String lastName, String middleName, Integer identityNumber, Integer insuranceNumber, String address, Long mobileNumber, Integer telephoneNumber, String nationality, String type)
        {
            final My010Customer entity = new My010CustomerImpl();
            entity.setFirstName(firstName);
            entity.setLastName(lastName);
            entity.setMiddleName(middleName);
            entity.setIdentityNumber(identityNumber);
            entity.setInsuranceNumber(insuranceNumber);
            entity.setAddress(address);
            entity.setMobileNumber(mobileNumber);
            entity.setTelephoneNumber(telephoneNumber);
            entity.setNationality(nationality);
            entity.setType(type);
            return entity;
        }
    }

    /**
     * @see Comparable#compareTo
     */
    public int compareTo(My010Customer o)
    {
        int cmp = 0;
        if (this.getId() != null)
        {
            cmp = this.getId().compareTo(o.getId());
        }
        else
        {
            if (this.getFirstName() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getFirstName().compareTo(o.getFirstName()));
            }
            if (this.getLastName() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getLastName().compareTo(o.getLastName()));
            }
            if (this.getMiddleName() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getMiddleName().compareTo(o.getMiddleName()));
            }
            if (this.getIdentityNumber() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getIdentityNumber().compareTo(o.getIdentityNumber()));
            }
            if (this.getInsuranceNumber() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getInsuranceNumber().compareTo(o.getInsuranceNumber()));
            }
            if (this.getAddress() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getAddress().compareTo(o.getAddress()));
            }
            if (this.getMobileNumber() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getMobileNumber().compareTo(o.getMobileNumber()));
            }
            if (this.getTelephoneNumber() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getTelephoneNumber().compareTo(o.getTelephoneNumber()));
            }
            if (this.getNationality() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getNationality().compareTo(o.getNationality()));
            }
            if (this.getType() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getType().compareTo(o.getType()));
            }
        }
        return cmp;
    }
// HibernateEntity.vsl merge-point
}
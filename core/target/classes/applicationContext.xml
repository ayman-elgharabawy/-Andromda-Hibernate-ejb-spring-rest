<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- Generated by: applicationContext.xml.vsl in andromda-spring-cartridge. -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd">

    <!-- ========================= GENERAL DEFINITIONS ========================= -->

    <!-- Message source for this context, loaded from localized "messages_xx" files -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename"><value>messages</value></property>
    </bean>

    <!-- applicationContext merge-point -->
    <bean id="hibernateMappingLocations" class="org.springframework.beans.factory.config.ListFactoryBean">
        <property name="sourceList">
            <list>
                <!-- applicationContext hibernateMappingLocations merge-point -->
                <value>classpath:com/vis/oubl/domain/My010Customer.hbm.xml</value>
                <value>classpath:com/vis/oubl/domain/RedPlaneService.hbm.xml</value>
            </list>
         </property>
    </bean>

    <bean id="hibernateProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.default_batch_fetch_size">16</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <prop key="hibernate.cache.query_cache_factory">org.hibernate.cache.StandardQueryCacheFactory</prop>
                <!-- add specific (non-supported in the Spring cartridge) hibernate properties here -->
            </props>
        </property>
    </bean>

    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingLocations" ref="hibernateMappingLocations"/>
        <property name="hibernateProperties" ref="hibernateProperties"/>
        <!-- applicationContext sessionFactory merge-point -->
    </bean>

    <!-- The Hibernate interceptor -->
    <bean id="hibernateInterceptor" class="org.springframework.orm.hibernate3.HibernateInterceptor">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- applicationContext hibernateInterceptor merge-point -->
    </bean>

    <bean id="com.vis.oubl.domain.My010CustomerDaoImpl" class="com.vis.oubl.domain.My010CustomerDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- My010Customer entity property merge-point -->
    </bean>

    <!-- My010Customer Entity Proxy with inner My010Customer Entity implementation -->
    <bean id="my010CustomerDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="com.vis.oubl.domain.My010CustomerDaoImpl"/>
        <property name="proxyInterfaces" value="com.vis.oubl.domain.My010CustomerDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="com.vis.oubl.domain.RedPlaneServiceDaoImpl" class="com.vis.oubl.domain.RedPlaneServiceDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- RedPlaneService entity property merge-point -->
    </bean>

    <!-- RedPlaneService Entity Proxy with inner RedPlaneService Entity implementation -->
    <bean id="redPlaneServiceDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="com.vis.oubl.domain.RedPlaneServiceDaoImpl"/>
        <property name="proxyInterfaces" value="com.vis.oubl.domain.RedPlaneServiceDao"/>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- ========================= Start of SERVICE DEFINITIONS ========================= -->

    <!-- Service Transactional Interceptor -->
    <bean id="serviceTransactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="transactionAttributeSource">
            <value>
                com.vis.oubl.service.My010CustomerService.getCustomernfoByMobileNumber=PROPAGATION_REQUIRED
                com.vis.oubl.service.My010CustomerService.getAllCustomers=PROPAGATION_REQUIRED
                com.vis.oubl.service.My010CustomerService.getCustomerById=PROPAGATION_REQUIRED
                com.vis.oubl.service.My010CustomerService.createCustomer=PROPAGATION_REQUIRED
                com.vis.oubl.service.My010CustomerService.editCustomer=PROPAGATION_REQUIRED
                com.vis.oubl.service.My010CustomerService.deleteCustomer=PROPAGATION_REQUIRED
                com.vis.oubl.service.My010CustomerService.getBalance=PROPAGATION_REQUIRED
                com.vis.oubl.service.RedPlaneService.getRedPlanerService=PROPAGATION_REQUIRED
            </value>
        </property>
    <!-- applicationContext serviceTransactionInterceptor merge-point -->
    </bean>

    <bean id="com.vis.oubl.service.My010CustomerServiceImpl" class="com.vis.oubl.service.My010CustomerServiceImpl" >
        <property name="my010CustomerDao" ref="my010CustomerDao"/>
        <!-- My010CustomerService service property merge-point -->
    </bean>

    <!-- My010CustomerService Service Proxy with inner My010CustomerService Service Implementation -->
    <bean id="my010CustomerService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="com.vis.oubl.service.My010CustomerServiceImpl"/>
        <property name="proxyInterfaces" value="com.vis.oubl.service.My010CustomerService"/>
        <property name="interceptorNames">
            <list>
                <value>serviceTransactionInterceptor</value>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="com.vis.oubl.service.RedPlaneServiceImpl" class="com.vis.oubl.service.RedPlaneServiceImpl" >
        <property name="redPlaneServiceDao" ref="redPlaneServiceDao"/>
        <!-- RedPlaneService service property merge-point -->
    </bean>

    <!-- RedPlaneService Service Proxy with inner RedPlaneService Service Implementation -->
    <bean id="redPlaneService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="com.vis.oubl.service.RedPlaneServiceImpl"/>
        <property name="proxyInterfaces" value="com.vis.oubl.service.RedPlaneService"/>
        <property name="interceptorNames">
            <list>
                <value>serviceTransactionInterceptor</value>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- ========================= End of SERVICE DEFINITIONS ========================= -->

</beans>

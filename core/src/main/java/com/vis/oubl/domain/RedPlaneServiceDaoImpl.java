// Generated by: hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package com.vis.oubl.domain;

import com.vis.oubl.vo.My010CustomerVO;
import com.vis.oubl.vo.RedPlaneServiceVO;

/**
 * @see RedPlaneService
 */
public class RedPlaneServiceDaoImpl
    extends RedPlaneServiceDaoBase
{
    /**
     * {@inheritDoc}
     */
    protected My010CustomerVO[] handleGetAllCustomers()
    {
        // TODO implement public My010CustomerVO[] handleGetAllCustomers()
        return null;
}

    /**
     * {@inheritDoc}
     */
    public void toRedPlaneServiceVO(
        RedPlaneService source,
        RedPlaneServiceVO target)
    {
        // TODO verify behavior of toRedPlaneServiceVO
        super.toRedPlaneServiceVO(source, target);
    }

    /**
     * {@inheritDoc}
     */
    public RedPlaneServiceVO toRedPlaneServiceVO(final RedPlaneService entity)
    {
        // TODO verify behavior of toRedPlaneServiceVO
        return super.toRedPlaneServiceVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private RedPlaneService loadRedPlaneServiceFromRedPlaneServiceVO(RedPlaneServiceVO redPlaneServiceVO)
    {
        // TODO implement loadRedPlaneServiceFromRedPlaneServiceVO
        throw new UnsupportedOperationException("com.vis.oubl.domain.loadRedPlaneServiceFromRedPlaneServiceVO(RedPlaneServiceVO) not yet implemented.");

        /* A typical implementation looks like this:
        RedPlaneService redPlaneService = this.load(redPlaneServiceVO.getId());
        if (redPlaneService == null)
        {
            redPlaneService = RedPlaneService.Factory.newInstance();
        }
        return redPlaneService;
        */
    }

    /**
     * {@inheritDoc}
     */
    public RedPlaneService redPlaneServiceVOToEntity(RedPlaneServiceVO redPlaneServiceVO)
    {
        // TODO verify behavior of redPlaneServiceVOToEntity
        RedPlaneService entity = this.loadRedPlaneServiceFromRedPlaneServiceVO(redPlaneServiceVO);
        this.redPlaneServiceVOToEntity(redPlaneServiceVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void redPlaneServiceVOToEntity(
        RedPlaneServiceVO source,
        RedPlaneService target,
        boolean copyIfNull)
    {
        // TODO verify behavior of redPlaneServiceVOToEntity
        super.redPlaneServiceVOToEntity(source, target, copyIfNull);
    }
}
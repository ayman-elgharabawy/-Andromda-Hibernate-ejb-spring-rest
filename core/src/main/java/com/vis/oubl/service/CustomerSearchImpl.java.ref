// license-header java merge-point
/* Autogenerated on 03/19/2016 08:16:06+0200 by AndroMDA!
 *
 * TEMPLATE:    jaxws\WebServiceMethodImpl.vsl in andromda-webservices-cartridge
 * MODEL CLASS: customerSearch
 * STEREOTYPE:  WebService on SearchService
 * STEREOTYPE:  WebServiceOperation on customerSearch
*/

/**
 * WebService Service Method Implementation for the SearchService
 * service org.andromda.cartridges.webservice.metafacades.WebServiceOperationLogicImpl[customerSearch].
 * 
 */

public class CustomerSearchImpl
{
    /**
     * Constructor
     */
    public CustomerSearchImpl()
    {
        //Documented empty code block - avoid compiler warning
    }

    /**
     * Delegate for TestCase SearchServiceWSDelegateTest and SearchServiceSEIImplTest
     */
    public static void customerSearchSetUp()
    {
        // Insert your custom code here for additional required unit test case setup for service method
    }

    /**
     * Delegate for TestCase SearchServiceWSDelegateTest and SearchServiceSEIImplTest
     */
    public static void customerSearchTearDown()
    {
        // Insert your custom code here for additional required unit test case tear down for service method
    }

   /**
    * Transforms the customerSearch service method parameters on SearchService.
    * 
    * @param id datatype.Integer multiplicity=0..1
    * Replace void with transformed type, use target.set() values to create transformation
    */
    public static void customerSearchTransformInput(
        final java.lang.Integer id
    )
    {

        if (id != null)
        {
            // transform(java.lang.Integer);
        }
    }

   /**
    * Transforms input to an output response for customerSearch service method on SearchService.
    * 
    * @return customerSearchResponse java.lang.Object
    */
    public static java.lang.Object customerSearchTransformResponse(
        /* Domain response to be transformed to service response */)
        // throws TransformationException?
    {
        // Dummy return value implementation with default values...
        // Iterate down through all complex types and create default dummy constructor and attribute values
        java.lang.Object rtn = new java.lang.Object();

        return rtn;
    }

    /** Create input test data for SearchService customerSearch
     * Used by webservice WSClient (against service) and core service WSDelegateTest (against implementation).
     * Return wrapped parameters:
     * id: java.lang.Integer
     * @return customerSearchReturn com.vis.oubl.service.CustomerSearch WS Input parameter wrapper (assumes wrapped WSDL)
     **/
    public static com.vis.oubl.service.CustomerSearch customerSearchCreateInput()
    {
        com.vis.oubl.service.CustomerSearch customerSearchReturn = new com.vis.oubl.service.CustomerSearch();

        // parameter1 idParam1 with 0 properties:
        java.lang.Integer idParam1 = java.lang.Integer.valueOf(1);
        customerSearchReturn.setId(idParam1);

        return customerSearchReturn;
    }
}


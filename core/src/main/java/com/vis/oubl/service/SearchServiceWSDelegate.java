// license-header java merge-point
/* Autogenerated on 11/12/2015 15:15:48+0200 by AndroMDA
 *
 * TEMPLATE:    jaxws/WebServiceDelegate.vsl in andromda-webservices-cartridge
 * MODEL CLASS: Data::com.vis.oubl::service::SearchService
 * STEREOTYPE:  WebService
*/
package com.vis.oubl.service;

import com.vis.oubl.vo.My010CustomerVO;

//import org.slf4j.Logger;
//import org.slf4j.LoggerFactory;

/**
 * WebService Service Endpoint Implementation delegate for the SearchService service.
 * 
 */

public class SearchServiceWSDelegate
{
   // private static final Logger LOG = LoggerFactory.getLogger(SearchServiceWSDelegate.class);
   // private static final String className = "SearchServiceWSDelegate";

    /**
     * Constructor
     */
    public SearchServiceWSDelegate()
    {
        //Documented empty code block - avoid compiler warning
    }

   /**
    * Invokes the createCustomer service method on SearchService.
    * 
    * @param patient My010CustomerVO multiplicity=0..1
    * @return createCustomerResponse Integer
    */
    public Integer createCustomer
    (
        My010CustomerVO patient
    )
    {
        // Populate method wrapper object so all parameters can be logged and transformed at once
        // Transform input parameters to domain request object    Ayman........
        Integer rtn =CreateCustomerImpl.createCustomerTransformResponse(
            patient
        );

        //TODO: Implement service operation
        //throw new UnsupportedOperationException("Service SearchService.createCustomer not implemented.");
        // Dummy return value implementation with default values, modify Impl class.
      //  Integer rtn = CreateCustomerImpl.createCustomerTransformResponse(/* Domain response to be transformed to service response */);
        return rtn;
    }

   /**
    * Invokes the customerSearch service method on SearchService.
    * 
    * @param id datatype Integer multiplicity=0..1
    * @return customerSearchResponse Object
    */
    public Object customerSearch
    (
        Integer id
    )
    {
        // Populate method wrapper object so all parameters can be logged and transformed at once
        // Transform input parameters to domain request object    Ayman........
        Object rtn =CustomerSearchImpl.customerSearchTransformResponse(
            id
        );

        //TODO: Implement service operation
        //throw new UnsupportedOperationException("Service SearchService.customerSearch not implemented.");
        // Dummy return value implementation with default values, modify Impl class.
      //  Object rtn = CustomerSearchImpl.customerSearchTransformResponse(/* Domain response to be transformed to service response */);
        return rtn;
    }

   /**
    * Invokes the customersQuery service method on SearchService.
    * 
    * @return customersQueryResponse Object
    */
    public Object customersQuery
    (
    )
    {
        // Populate method wrapper object so all parameters can be logged and transformed at once
        // Transform input parameters to domain request object    Ayman........
        Object rtn =CustomersQueryImpl.customersQueryTransformResponse(
        );

        //TODO: Implement service operation
        //throw new UnsupportedOperationException("Service SearchService.customersQuery not implemented.");
        // Dummy return value implementation with default values, modify Impl class.
      //  Object rtn = CustomersQueryImpl.customersQueryTransformResponse(/* Domain response to be transformed to service response */);
        return rtn;
    }

   /**
    * Invokes the deleteCustomer service method on SearchService.
    * 
    * @param id datatype Long multiplicity=0..1
    * @return deleteCustomerResponse Integer
    */
    public Integer deleteCustomer
    (
        Long id
    )
    {
        // Populate method wrapper object so all parameters can be logged and transformed at once
        // Transform input parameters to domain request object    Ayman........
        Integer rtn =DeleteCustomerImpl.deleteCustomerTransformResponse(
            id
        );

        //TODO: Implement service operation
        //throw new UnsupportedOperationException("Service SearchService.deleteCustomer not implemented.");
        // Dummy return value implementation with default values, modify Impl class.
      //  Integer rtn = DeleteCustomerImpl.deleteCustomerTransformResponse(/* Domain response to be transformed to service response */);
        return rtn;
    }

   /**
    * Invokes the updateCustomer service method on SearchService.
    * 
    * @param patient My010CustomerVO multiplicity=0..1
    * @return updateCustomerResponse Integer
    */
    public Integer updateCustomer
    (
        My010CustomerVO patient
    )
    {
        // Populate method wrapper object so all parameters can be logged and transformed at once
        // Transform input parameters to domain request object    Ayman........
        Integer rtn =UpdateCustomerImpl.updateCustomerTransformResponse(
            patient
        );

        //TODO: Implement service operation
        //throw new UnsupportedOperationException("Service SearchService.updateCustomer not implemented.");
        // Dummy return value implementation with default values, modify Impl class.
      //  Integer rtn = UpdateCustomerImpl.updateCustomerTransformResponse(/* Domain response to be transformed to service response */);
        return rtn;
    }
}
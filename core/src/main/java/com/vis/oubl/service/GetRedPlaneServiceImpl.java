package com.vis.oubl.service;
import com.vis.oubl.ServiceLocator;
import com.vis.oubl.service.GetRedPlaneService;

// license-header java merge-point
/* Autogenerated on 10/22/2015 03:09:41-0700 by AndroMDA!
 *
 * TEMPLATE:    jaxws\WebServiceMethodImpl.vsl in andromda-webservices-cartridge
 * MODEL CLASS: getRedPlaneService
 * STEREOTYPE:  WebService on MedicalHistoryService
 * STEREOTYPE:  WebServiceOperation on getRedPlaneService
*/

/**
 * WebService Service Method Implementation for the MedicalHistoryService
 * service org.andromda.cartridges.webservice.metafacades.WebServiceOperationLogicImpl[getRedPlaneService].
 * 
 */

public class GetRedPlaneServiceImpl
{
    /**
     * Constructor
     */
    public GetRedPlaneServiceImpl()
    {
        //Documented empty code block - avoid compiler warning
    }

    /**
     * Delegate for TestCase MedicalHistoryServiceWSDelegateTest and MedicalHistoryServiceSEIImplTest
     */
    public static void getRedPlaneServiceSetUp()
    {
        // Insert your custom code here for additional required unit test case setup for service method
    }

    /**
     * Delegate for TestCase MedicalHistoryServiceWSDelegateTest and MedicalHistoryServiceSEIImplTest
     */
    public static void getRedPlaneServiceTearDown()
    {
        // Insert your custom code here for additional required unit test case tear down for service method
    }

   /**
    * Transforms the getRedPlaneService service method parameters on MedicalHistoryService.
    * 
    * @param id datatype.Integer multiplicity=0..1
    * Replace void with transformed type, use target.set() values to create transformation
    */
    public static void getRedPlaneServiceTransformInput(
        final Integer id
    )
    {

        if (id != null)
        {
            // transform(Integer);
        }
    }

   /**
    * Transforms input to an output response for getRedPlaneService service method on MedicalHistoryService.
    * 
    * @return getRedPlaneServiceResponse Object
    */
    public static Object[] getRedPlaneServiceTransformResponse(
        /* Domain response to be transformed to service response */)
        // throws TransformationException?
    {
        // Dummy return value implementation with default values...
        // Iterate down through all complex types and create default dummy constructor and attribute values
    	ServiceLocator locator=  ServiceLocator.instance();
    	return locator.getRedPlaneService().getRedPlanerService();

      //  return rtn;
    }

    /** Create input test data for MedicalHistoryService getRedPlaneService
     * Used by webservice WSClient (against service) and core service WSDelegateTest (against implementation).
     * Return wrapped parameters:
     * id: Integer
     * @return getRedPlaneServiceReturn GetRedPlaneService WS Input parameter wrapper (assumes wrapped WSDL)
     **/
    public static GetRedPlaneService getRedPlaneServiceCreateInput()
    {
        GetRedPlaneService getRedPlaneServiceReturn = new GetRedPlaneService();

        // parameter1 idParam1 with 0 properties:
        Integer idParam1 = Integer.valueOf(1);
      //  getRedPlaneServiceReturn.setId(idParam1);

        return getRedPlaneServiceReturn;
    }
}
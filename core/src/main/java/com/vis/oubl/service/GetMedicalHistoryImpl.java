package com.vis.oubl.service;
import com.vis.oubl.ServiceLocator;


// license-header java merge-point
/* Autogenerated on 10/22/2015 02:13:54-0700 by AndroMDA!
 *
 * TEMPLATE:    jaxws\WebServiceMethodImpl.vsl in andromda-webservices-cartridge
 * MODEL CLASS: getMedicalHistory
 * STEREOTYPE:  WebService on MedicalHistoryService
 * STEREOTYPE:  WebServiceOperation on getMedicalHistory
*/

/**
 * WebService Service Method Implementation for the MedicalHistoryService
 * service org.andromda.cartridges.webservice.metafacades.WebServiceOperationLogicImpl[getMedicalHistory].
 * 
 */

public class GetMedicalHistoryImpl
{
    /**
     * Constructor
     */
    public GetMedicalHistoryImpl()
    {
        //Documented empty code block - avoid compiler warning
    }

    /**
     * Delegate for TestCase MedicalHistoryServiceWSDelegateTest and MedicalHistoryServiceSEIImplTest
     */
    public static void getMedicalHistorySetUp()
    {
        // Insert your custom code here for additional required unit test case setup for service method
    }

    /**
     * Delegate for TestCase MedicalHistoryServiceWSDelegateTest and MedicalHistoryServiceSEIImplTest
     */
    public static void getMedicalHistoryTearDown()
    {
        // Insert your custom code here for additional required unit test case tear down for service method
    }

   /**
    * Transforms the getMedicalHistory service method parameters on MedicalHistoryService.
    * 
    * @param id datatype.Integer multiplicity=0..1
    * Replace void with transformed type, use target.set() values to create transformation
    */
    public static void getMedicalHistoryTransformInput(
        final Integer id
    )
    {

        if (id != null)
        {
            // transform(Integer);
        }
    }

   /**
    * Transforms input to an output response for getMedicalHistory service method on MedicalHistoryService.
    * 
    * @return getMedicalHistoryResponse Object
    */
    public static Object getMedicalHistoryTransformResponse(
        /* Domain response to be transformed to service response */)
        // throws TransformationException?
    {
        // Dummy return value implementation with default values...
        // Iterate down through all complex types and create default dummy constructor and attribute values
     ServiceLocator locator=  ServiceLocator.instance();
    return locator.getRedPlaneService().getRedPlanerService();

    }

    /** Create input test data for MedicalHistoryService getMedicalHistory
     * Used by webservice WSClient (against service) and core service WSDelegateTest (against implementation).
     * Return wrapped parameters:
     * id: Integer
     * @return getMedicalHistoryReturn GetMedicalHistory WS Input parameter wrapper (assumes wrapped WSDL)
     **/
 
}
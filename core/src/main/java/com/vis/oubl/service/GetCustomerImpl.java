// license-header java merge-point
/* Autogenerated on 11/12/2015 15:15:49+0200 by AndroMDA!
 *
 * TEMPLATE:    jaxws\WebServiceMethodImpl.vsl in andromda-webservices-cartridge
 * MODEL CLASS: getCustomer
 * STEREOTYPE:  WebService on MedicalHistoryService
 * STEREOTYPE:  WebServiceOperation on getCustomer
*/
package com.vis.oubl.service;

import com.vis.oubl.ServiceLocator;

/**
 * WebService Service Method Implementation for the MedicalHistoryService
 * service org.andromda.cartridges.webservice.metafacades.WebServiceOperationLogicImpl[getCustomer].
 * 
 */

public class GetCustomerImpl
{
    /**
     * Constructor
     */
    public GetCustomerImpl()
    {
        //Documented empty code block - avoid compiler warning
    }

    /**
     * Delegate for TestCase MedicalHistoryServiceWSDelegateTest and MedicalHistoryServiceSEIImplTest
     */
    public static void getCustomerSetUp()
    {
        // Insert your custom code here for additional required unit test case setup for service method
    }

    /**
     * Delegate for TestCase MedicalHistoryServiceWSDelegateTest and MedicalHistoryServiceSEIImplTest
     */
    public static void getCustomerTearDown()
    {
        // Insert your custom code here for additional required unit test case tear down for service method
    }

   /**
    * Transforms the getCustomer service method parameters on MedicalHistoryService.
    * 
    * @param id datatype.Long multiplicity=0..1
    * Replace void with transformed type, use target.set() values to create transformation
    */
    public static void getCustomerTransformInput(
        final Long id
    )
    {

        if (id != null)
        {
            // transform(Long);
        }
    }

   /**
    * Transforms input to an output response for getCustomer service method on MedicalHistoryService.
    * 
    * @return getCustomerResponse Object
    */
    public static Object getCustomerTransformResponse(
        Long id
    )


        // throws TransformationException?
    {
	
        // Dummy return value implementation with default values...
        // Iterate down through all complex types and create default dummy constructor and attribute values
		 ServiceLocator locator= ServiceLocator.instance();
        Object rtn = new Object();

        return rtn;
    }

    /** Create input test data for MedicalHistoryService getCustomer
     * Used by webservice WSClient (against service) and core service WSDelegateTest (against implementation).
     * Return wrapped parameters:
     * id: Long
     * @return getCustomerReturn GetCustomer WS Input parameter wrapper (assumes wrapped WSDL)
     **/
    public static GetCustomer getCustomerCreateInput()
    {
        GetCustomer getCustomerReturn = new GetCustomer();

        // parameter1 idParam1 with 0 properties:
        Long idParam1 = Long.valueOf(1);
        getCustomerReturn.setId(idParam1);

        return getCustomerReturn;
    }
}
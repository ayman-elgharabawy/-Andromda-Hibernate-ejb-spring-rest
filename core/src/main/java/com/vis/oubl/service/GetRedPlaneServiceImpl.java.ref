// license-header java merge-point
/* Autogenerated on 03/19/2016 08:16:06+0200 by AndroMDA!
 *
 * TEMPLATE:    jaxws\WebServiceMethodImpl.vsl in andromda-webservices-cartridge
 * MODEL CLASS: getRedPlaneService
 * STEREOTYPE:  WebService on MedicalHistoryService
 * STEREOTYPE:  WebServiceOperation on getRedPlaneService
*/

/**
 * WebService Service Method Implementation for the MedicalHistoryService
 * service org.andromda.cartridges.webservice.metafacades.WebServiceOperationLogicImpl[getRedPlaneService].
 * 
 */

public class GetRedPlaneServiceImpl
{
    /**
     * Constructor
     */
    public GetRedPlaneServiceImpl()
    {
        //Documented empty code block - avoid compiler warning
    }

    /**
     * Delegate for TestCase MedicalHistoryServiceWSDelegateTest and MedicalHistoryServiceSEIImplTest
     */
    public static void getRedPlaneServiceSetUp()
    {
        // Insert your custom code here for additional required unit test case setup for service method
    }

    /**
     * Delegate for TestCase MedicalHistoryServiceWSDelegateTest and MedicalHistoryServiceSEIImplTest
     */
    public static void getRedPlaneServiceTearDown()
    {
        // Insert your custom code here for additional required unit test case tear down for service method
    }

   /**
    * Transforms the getRedPlaneService service method parameters on MedicalHistoryService.
    * 
    * Replace void with transformed type, use target.set() values to create transformation
    */
    public static void getRedPlaneServiceTransformInput(
    )
    {
        // Documented empty block - avoid compiler warning - no method parameters
    }

   /**
    * Transforms input to an output response for getRedPlaneService service method on MedicalHistoryService.
    * 
    * @return getRedPlaneServiceResponse java.lang.Object
    */
    public static java.lang.Object getRedPlaneServiceTransformResponse(
        /* Domain response to be transformed to service response */)
        // throws TransformationException?
    {
        // Dummy return value implementation with default values...
        // Iterate down through all complex types and create default dummy constructor and attribute values
        java.lang.Object rtn = new java.lang.Object();

        return rtn;
    }

    /** Create input test data for MedicalHistoryService getRedPlaneService
     * Used by webservice WSClient (against service) and core service WSDelegateTest (against implementation).
     * Return wrapped parameters:
     * @return getRedPlaneServiceReturn com.vis.oubl.service.GetRedPlaneService WS Input parameter wrapper (assumes wrapped WSDL)
     **/
    public static com.vis.oubl.service.GetRedPlaneService getRedPlaneServiceCreateInput()
    {
        com.vis.oubl.service.GetRedPlaneService getRedPlaneServiceReturn = new com.vis.oubl.service.GetRedPlaneService();

        return getRedPlaneServiceReturn;
    }
}


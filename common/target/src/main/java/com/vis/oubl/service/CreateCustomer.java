// license-header java merge-point
/* Autogenerated on 03/19/2016 08:16:05+0200 by AndroMDA DO NOT EDIT!
 *
 * TEMPLATE:    jaxws/MethodRequest.java.vsl in andromda-webservice cartridge
 * MODEL CLASS: createCustomer
 * STEREOTYPE:  WebServiceOperation
*/
package com.vis.oubl.service;

import com.vis.oubl.vo.My010CustomerVO;
import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang.builder.CompareToBuilder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * Method Request wrapper for webservice request element
 * com.vis.oubl.service.SearchService.createCustomer()
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
"patient"})
@XmlRootElement(name = "createCustomer")
public class CreateCustomer
    implements Serializable, Comparable<CreateCustomer>
{
    private static final long serialVersionUID = 1L;

    /**
     * 
     */
    @XmlElement(required = true)
    protected My010CustomerVO patient;

    /**
     * 
     * Gets the value of the patient property
     * @return patient My010CustomerVO
     *     possible object is {@link My010CustomerVO }
     */
    public My010CustomerVO getPatient()
    {
        return this.patient;
    }

    /**
     * 
     * @param patientIn
     */
    public void setPatient(My010CustomerVO patientIn)
    {
        this.patient = patientIn;
    }

    /**
     * @param object to compare this object against
     * @return boolean true if equal
     * @see Object#equals(Object)
     */
    @Override
    public boolean equals(Object object)
    {
        if (object==null || object.getClass() != this.getClass())
        {
             return false;
        }
        CreateCustomer rhs = (CreateCustomer) object;
        return new EqualsBuilder().appendSuper(super.equals(object))
            .append(this.getPatient(), rhs.getPatient())
            .isEquals();
    }

    /**
     * @param myClass the external class to compare this object against
     * @return int=0 if equal, -1 if this lessThan myClass, 1 if this greaterThan myClass
     * @see Comparable#compareTo(Object)
     */
    @Override
    public int compareTo(CreateCustomer myClass)
    {
        if (myClass==null)
        {
            return -1;
        }
        // Check if the same object instance
        if (myClass==this)
        {
            return 0;
        }
        return new CompareToBuilder()
             .append(this.getPatient(), myClass.getPatient())
             .toComparison();
    }

    /**
     * @return int hashCode value
     * @see Object#hashCode()
     */
    @Override
    public int hashCode()
    {
        return new HashCodeBuilder(1249046965, -82296885).appendSuper(super.hashCode())
           .append(this.getPatient())
           .toHashCode();
    }

    /**
     * @return String representation of object
     * @see Object#toString()
     */
    @Override
    public String toString()
    {
        return new ToStringBuilder(this)
            .append("patient", this.getPatient())
            .toString();
    }
}
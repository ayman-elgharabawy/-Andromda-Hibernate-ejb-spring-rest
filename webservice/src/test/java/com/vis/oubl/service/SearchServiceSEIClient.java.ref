// license-header java merge-point
/* Autogenerated on 03/19/2016 08:16:06+0200 by AndroMDA DO NOT EDIT!
 *
 * TEMPLATE:    jaxws/WebServiceClient.vsl in andromda-webservice cartridge
 * MODEL CLASS: Data::com.vis.oubl::service::SearchService
 * STEREOTYPE:  WebService
*/
package com.vis.oubl.service;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * WebService Service Client for the SearchService service endpoint interface (SearchServiceSEI).
 * 
 */

@WebServiceClient(name = "SearchService",
                  wsdlLocation = "http://localhost:9090/pag-webservice/services/SearchService?wsdl",
                  targetNamespace = "http://service.oubl.vis.com/")
public class SearchServiceSEIClient extends Service
{
    private static final Logger LOG = LoggerFactory.getLogger(SearchServiceSEIClient.class);
    /** WSDL location */
    public static final URL WSDL_LOCATION;
    /** Service QName @see {@link javax.xml.namespace.QName} */
    public static final QName SERVICE = new QName("http://service.oubl.vis.com/", "SearchService");
    /** Endpoint Service QName @see {@link javax.xml.namespace.QName} */
    public static final QName SearchService = new QName("http://service.oubl.vis.com/", "SearchService");
    static
    {
        URL url = null;
        try
        {
            url = new URL("http://localhost:9090/pag-webservice/services/SearchService?wsdl");
        }
        catch (MalformedURLException e)
        {
            LOG.error("Can not initialize the default wsdl from http://localhost:9090/pag-webservice/services/SearchService?wsdl", e);
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    /**
     * @param wsdlLocation wsdl URL
     */
    public SearchServiceSEIClient(URL wsdlLocation)
    {
        super(wsdlLocation, SERVICE);
    }

    /**
     * @param wsdlLocation wsdl URL
     * @param serviceName javax.xml.namespace.QName
     * @see javax.xml.ws.Service#Service(URL, QName)
     */
    public SearchServiceSEIClient(URL wsdlLocation, QName serviceName)
    {
        super(wsdlLocation, serviceName);
    }

    /**
     * @see javax.xml.ws.Service#Service(URL, QName)
     */
    public SearchServiceSEIClient()
    {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     *
     * @return SearchServiceSEI
     */
    @WebEndpoint(name = "SearchService")
    public SearchServiceSEI getSearchService()
    {
        return super.getPort(SearchService, SearchServiceSEI.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.
     *         Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SearchServiceSEI
     */
    @WebEndpoint(name = "SearchService")
    public SearchServiceSEI getSearchService(WebServiceFeature... features)
    {
        return super.getPort(SearchService, SearchServiceSEI.class, features);
    }
}

